extend type Query {
}

extend type Mutation {
  # Register user
  register(input: RegisterUserInput!): UserPayload!
  # Login user
  login(input: LoginUserInput!): AuthPayload!

  # Register user
  registerPassword(input: RegisterUserInput!): UserPayload!

  # Login user
  loginPassword(input: LoginUserInput!): AuthPayload!

  # Password management
  forgotPassword(input: ForgotPasswordInput!): Boolean!
  resetPassword(input: ResetPasswordInput!): ResetPayload!
}

extend type Subscription {
}

input RegisterUserInput {
  username: String!
  email: String!
  password: String!
}

input LoginUserInput {
  email: String!
  password: String!
}

input ForgotPasswordInput {
  email: String!
}

input ResetPasswordInput {
  token: String!
  password: String!
  passwordConfirmation: String!
}
